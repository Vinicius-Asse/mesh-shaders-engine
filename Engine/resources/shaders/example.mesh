#version 450
#extension GL_NV_mesh_shader : enable

// Número de threads por workgroup (somente uma dimensão).
layout(local_size_x=1) in;

// Dados de saída do workgroup
layout(triangles, max_vertices=3, max_primitives=1) out;

// Dados complementares do vértice
layout(location=0) out PerVertexData 
{ 
    vec4 color;
} v_out[];  //[max_vertices]

const vec3 vertices[3] = { vec3(-1,-1,0), vec3(0,1,0), vec3(1,-1,0) };
const vec3 colors[3] = { vec3(1.0,0.0,0.0), vec3(0.0,1.0,0.0), vec3(0.0,0.0,1.0) };

void main()
{
    // Posição dos vértices
    gl_MeshVerticesNV[0].gl_Position = vec4(vertices[0], 1.0); 
    gl_MeshVerticesNV[1].gl_Position = vec4(vertices[1], 1.0); 
    gl_MeshVerticesNV[2].gl_Position = vec4(vertices[2], 1.0); 
 
    // Cor dos vértices
    v_out[0].color = vec4(colors[0], 1.0);
    v_out[1].color = vec4(colors[1], 1.0);
    v_out[2].color = vec4(colors[2], 1.0);
 
    // Indices dos triângulos
    gl_PrimitiveIndicesNV[0] = 0;
    gl_PrimitiveIndicesNV[1] = 1;
    gl_PrimitiveIndicesNV[2] = 2;
 
    // Número de triangulos  
    gl_PrimitiveCountNV = 1;
}